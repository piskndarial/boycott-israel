import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import {notFound} from 'next/navigation';
import { NextIntlClientProvider } from "next-intl";
import {unstable_setRequestLocale} from 'next-intl/server';
import { MobileNavbarProvider } from '@/context/MobileNavbarContext';
const inter = Inter({ subsets: ['latin'] })

const locales = ['en', 'my'];

export function generateStaticParams() {
  return [{ locale: "en" }, { locale: "my" }];
}

async function getMessages(locale: string) {
  try {
    return (await import(`../../../messages/${locale}.json`)).default;
  } catch (error) {
    notFound();
  }
}

export const metadata: Metadata = {
  title: 'Boycott Israel',
  description: 'Generated by create next app',
}

interface RootLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

export default async function RootLayout({
  children,
  params: { locale },
}: RootLayoutProps) {

  if (!locales.includes(locale as any)) notFound();
  unstable_setRequestLocale(locale);
  const messages = await getMessages(locale);
  return (
    <html lang={locale}>
      <body className={inter.className}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <MobileNavbarProvider>
            {children}
          </MobileNavbarProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  )
}
